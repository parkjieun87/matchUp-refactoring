<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="teamMember">
	  
	  <!-- 시퀀스 번호 발행  -->
  	<select id="sequence" resultType="int">
  			select team_member_seq.nextval from dual
  	</select>
 
 	<!-- 팀 가입 -->
	<insert id="insert" parameterType="TeamMemberDto" >
  		insert into team_member(
  			team_member_no, team_no, member_id, team_member_level)
  		values (
  			team_member_seq.nextval, #{teamNo}, #{memberId}, #{teamMemberLevel} )
   	</insert>
   
   	<!-- 팀가입(회원번호 시퀀스 미리 발행 후 사용) -->
   	<insert id="insert2">
  		insert into team_member(
  			team_member_no, team_no, member_id, team_member_level)
  		values (
  			#{teamMemberNo}, #{teamNo}, #{memberId}, #{teamMemberLevel} )
   	</insert>
   
   	<!-- 팀 회원번호로 검색 -->
   	<select id="findTeamMember" parameterType="int" resultType="TeamMemberDto">
   		select * from team_member where team_member_no = #{teamMemberNo}
   	</select>
   
   	<!-- 일반 회원 탈퇴 메소드 -->
	<delete id="deleteTeamMember" parameterType="int">
	    delete from team_member where team_member_no = #{teamMemberNo} and (team_member_level = '일반회원' or team_member_level = '용병')
	</delete>

   	
   	<!-- Select 특정 회원이 속한 모든 팀 조회 -->
	<select id="selectTeamByMemberId" parameterType="string" resultType="java.lang.Integer">
<!-- 	    SELECT * FROM team_member WHERE member_id = #{memberId, jdbcType=VARCHAR} -->
		SELECT team_no FROM team_member WHERE member_id = #{memberId}
	</select>
	
	  <!-- Select 팀원 수 조회 -->
	  <select id="selectTeamMemberCount" parameterType="int" resultType="int">
	    SELECT COUNT(*) FROM team_member WHERE team_no = #{teamNo}
	  </select>
   
   
		   <!-- 일반 회원 탈퇴 메소드 -->
   	<delete id="deleteCommonMember" parameterType="int">
   		delete team_member where team_member_no=#{teamMemberNo} and (team_member_level = '일반회원' or team_member_level = '용병')
   	</delete>
   
	<!-- 회원 번호로 회원 정보 조회  밑에 코드 아니고 내거에 맞게 만들어야됨-->
<!-- 	<select id = "selectOneMember" parameterType = "map" resultType = "teamMemberInfoVO"> -->
<!-- 		select * from team_member am left outer join member_attachment aa on am.member_no = aa.member_origin_no where am.member_no = #{memberNo} and am.member_ahzit_no = #{memberAhzitNo} -->
<!-- 	</select> -->
	<!-- Get team member list -->
	<select id="getTeamMemberList" resultType="TeamMemberDto">
	    SELECT *
	    FROM team_member
	    WHERE team_no = #{teamNo}
		ORDER BY CASE WHEN team_member_level = '팀장' THEN 0 ELSE 1 END, team_no ASC
	</select>
	
	<!-- Check if team member -->
	<select id="checkIfTeamMember" resultType="int">
	    SELECT COUNT(*)
	    FROM team_member
	    WHERE team_no = #{teamNo} AND team_member_no = #{teamMemberNo, jdbcType=INTEGER}
	</select>
	
	<resultMap type="TeamInMemberInfoVO" id="teamMemberInfoResultMap">
		<association property="teamMemberDto" javaType="TeamMemberDto">
			<id column="team_member_no" property="teamMemberNo"/>
			<result column="team_member_no" property="teamMemberNo"/>
			<result column="team_no" property="teamNo"/>
			<result column="vo_member_id" property="memberId"/>
			<result column="team_member_level" property="teamMemberLevel"/>
		</association>
		<association property="memberDto" javaType="MemberDto">
    		<id column="member_id" property="memberId"/>
			<result column="member_id" property="memberId"/>
			<result column="member_pw" property="memberPw"/>
			<result column="member_name" property="memberName"/>
			<result column="member_level" property="memberLevel"/>
			<result column="member_email" property="memberEmail"/>
			<result column="member_gender" property="memberGender"/>
			<result column="member_manner" property="memberManner"/>
			<result column="member_birth" property="memberBirth"/>
			<result column="img_no" property="imgNo"/>
		</association>
	</resultMap>
	
	<!-- teamNo에 가입한 팀원 정보 조회 -->
	<select id="teamMemberInfo" resultMap="teamMemberInfoResultMap">
		SELECT *
		FROM team_member
		JOIN member ON team_member.member_id = member.member_id
		WHERE team_member.team_no = #{teamNo}
		order by case when team_member_level = '팀장' then 0 else 1 end, team_member_no asc
	</select>
	
	<select id="selectMemberwithVO" resultType="TeamMemberVO">
		select TM.*, T.team_name, M.member_name
		from team_member TM
		join team T on TM.team_no = T.team_no
		join member M on TM.member_id = M.member_id
		where TM.team_no = #{teamNO}
		order by M.member_name
	</select>
	
	<select id="selectTeamListwithVO" resultType="TeamMemberVO">
		select TM.*, T.team_name, M.member_name
		from team_member TM
		join team T on TM.team_no = T.team_no
		join member M on TM.member_id = M.member_id
		where M.member_id = #{memberId}
		order by T.team_name
	</select>
	
	<select id="searchTeamMembers" resultMap="teamMemberInfoResultMap">
		SELECT *
		FROM team_member
		JOIN member ON team_member.member_id = member.member_id
		WHERE team_member.team_no = #{teamNo} AND (member.member_name LIKE '%' || #{keyword} || '%' OR member.member_id LIKE '%' || #{keyword} || '%')
		ORDER BY CASE WHEN team_member_level = '팀장' THEN 0 ELSE 1 END, team_member_no ASC
	</select>

	<update id="updateTeamMemberLevel">
    UPDATE team_member
    SET team_member_level = #{teamMemberLevel}
    WHERE team_member_no = #{teamMemberNo}
	</update>

	
</mapper>